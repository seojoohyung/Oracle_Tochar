SELECT
       CART_NO     장바구니
    ,  CART_PROD 
    ,  CART_QTY    구입갯수
    ,  MEM_ID      회원ID
    ,  MEM_NAME    회원명
FROM CART INNER JOIN MEMBER ON (CART_MEMBER = MEM_ID)
          INNER JOIN PROD  ON  (CART_PROD  = PROD_ID)
;

CREATE TABLE R(
       A VARCHAR2(10) NOT NULL  
      ,B VARCHAR2(10) NOT NULL
      ,C VARCHAR2(10) NOT NULL
      ,CONSTRAINT PK_R PRIMARY KEY(A)
      ,CONSTRAINT PK_S FOREIGN KEY(C) REFERENCES R(C)
);
 ALTER TABLE R 
 ADD (
 CONSTRAINT FK_S FOREIGN KEY (C) REFERENCES S(C));
 
CREATE TABLE S(
       C VARCHAR2(10) NOT NULL  
      ,D VARCHAR2(10) NOT NULL
      ,E VARCHAR2(10) NOT NULL
      ,CONSTRAINT PK_S PRIMARY KEY(C) 
);
INSERT INTO S(C,D,E)
VALUES ('C1','D1','E1');
INSERT Into S(C,D,E)
VALUES ('C2','D2','E2');

INSERT INTO R(A,B,C)
VALUES ('A1','B1','C1');
INSERT INTO R(A,B,C)
VALUES ('A2','B2','C2');


SELECT * FROM R;
SELECT * FROM S;

SELECT *
FROM S,R;

SELECT *
FROM S CROSS JOIN R;
----ANSI 표준 
SELECT R.A,R.B,R.C,
       S.C,S.D,S.E
FROM S,R;
-- EQUI JOIN 내부 조건 
SELECT R.A,R.B,R.C  AS RC,
       S.C AS SC,S.D,S.E
FROM S,R
WHERE R.C = S.C;
--ANSI 내붖임 
--EQUI JOIN(내부조인)
SELECT R.A, R.B, R.C AS RC,
       S.C AS SC, S.D, S.E
FROM   S INNER JOIN R
ON (R.C = S.C);

--문제 
SELECT PROD_ID      상품코드 
     , PROD_NAME    상품명
     , BUYER_NAME   거래처
     , PROD_BUYER
     , BUYER_ID
FROM  PROD , BUYER
WHERE PROD_BUYER = BUYER_ID --조인조건
AND   BUYER_NAME ='삼성전자';
--ANSI 표준 

SELECT PROD_ID      상품코드 
     , PROD_NAME    상품명
     , BUYER_NAME   거래처
     , PROD_BUYER
     , BUYER_ID
FROM  PROD INNER JOIN BUYER
ON(PROD_BUYER = BUYER_ID  AND   BUYER_NAME ='삼성전자');
--장바구니 
SELECT 
       TO_CHAR(TO_DATE(SUBSTR(CART_NO,1,8), 'YYYYMMDD'),'YYYY"년"MM"월"DD"일"') AS 장바구니번호
      ,

FROM CART;
--WHERE (SUBSTR(CART_NO,1,6) like '200504')
--;
SELECT PROD_ID   상품코드
      ,PROD_NAME 상품명
      ,PROD_LGU  상품분류코드
      ,PROD_NM   분류명
FROM PROD, LPROD
WHERE PROD_LGU = LPROD_GU;

SELECT CART_NO
    ,  CART_PROD
    ,  CART_QTY
    ,  CART_MEMBER
    ,  MEM_NAME
    ,  PROD_NAME
FROM CART,MEMBER,PROD
WHERE CART_MEMBER = MEM_ID
AND PROD_ID = CART_PROD;
---------------IMPORTANT
SELECT TO_CHAR(TO_DATE(SUBSTR(CART_NO,1,6),'YYMMDD'),'YYYY"년"MM"월"DD"일"')    장바구니반호
      ,SUBSTR(CART_PROD,1,4)  상품코드
      ,SUM(CART_QTY)   구매수량
      ,CART_MEMBER 회원ID
      ,MEM_NAME   회원명
FROM CART, MEMBER
WHERE MEM_ID = CART_MEMBER
AND   CART_NO LIKE '200504%'
GROUP BY  TO_CHAR(TO_DATE(SUBSTR(CART_NO,1,6),'YYMMDD'),'YYYY"년"MM"월"DD"일"')   
      ,SUBSTR(CART_PROD,1,4), CART_MEMBER, MEM_NAME
ORDER BY 1,2,4   ;

---AVG 구하기
SELECT ROUND(AVG(DISTINCT PROD_COST),2) AS 중복값제거 
      ,ROUND(AVG(ALL PROD_COST),2)         DEFFALT로모든값포함
      ,ROUND(AVG(PROD_COST),2)          매입가평균
      FROM PROD;
---상품테이블의 상품 분류별 매입 가격 평균 
SELECT PROD_LGU    상품분류
    ,  AVG(PROD_COST)   매입가격
FROM PROD
GROUP BY PROD_LGU
ORDER BY PROD_LGU;