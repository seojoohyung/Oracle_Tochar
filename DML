--대소문자 단축키 : ALT +' ,CONER
INSERT INTO LPROD(LPROD_GU, LPROD_ID, LPROD_NM)
VALUES('P101',1, '컴퓨터제품');
INSERT INTO LPROD(LPROD_GU, LPROD_ID, LPROD_NM)
VALUES('P102',2,'전자제품');
INSERT INTO LPROD(LPROD_GU, LPROD_ID, LPROD_NM)
VALUES('P201',3,'여성캐쥬얼');
INSERT INTO LPROD(LPROD_GU, LPROD_ID, LPROD_NM)
VALUES('P202', 4,'남성캐쥬얼');
INSERT INTO LPROD(LPROD_GU, LPROD_ID, LPROD_NM)
VALUES('P301', 5, '피혁잡화');
INSERT INTO LPROD(LPROD_GU, LPROD_ID, LPROD_NM)
VALUES('P302', 6,'화장품');
INSERT INTO LPROD(LPROD_GU, LPROD_ID, LPROD_NM)
VALUES('P401', 7,'음반/CD');
INSERT INTO LPROD(LPROD_GU, LPROD_ID, LPROD_NM)
VALUES('P402', 8, '도서');
INSERT INTO LPROD(LPROD_GU, LPROD_ID, LPROD_NM)
VALUES('P403', 9, '문구류');

--- TRANDACTION 종료 새로운 TRANSACTON 시작
COMMIT;
-- 업데이트 ㅆ대어

SELECT LPROD_GU  ---세로방향
       ,LPROD_NM
FROM LPROD
WHERE LPROD_GU = 'P102';


SELECT *          ---가로방향
FROM LPROD
WHERE LPROD_GU = 'P102';

UPDATE LPROD
SET    LPROD_NM = '향수'
WHERE  LPROD_GU = 'P102';

UPDATE LPROD
SET
WHERE

SELECT *
FROM LPROD;
commit;

---ROLLBACK;

--등푸른 생선주세요
DELETE *
FORM  LPROD
WHERE LPROD_GU ='P202'

DELETE FROM LPROD
WHERE LPROD_GU= 'P202';

SELECT *
FROM LPROD;

COMMIT;

-- 상품 테이블로 부터 모든 row와 coulum을 검색 하시오
SELECT *
FROM PROD;


--회원 테이블ㄹ 부터 ㅁ든 ROW오 COLUM을 검색 하시오
SELECT *
FROM MEMBER;

-- 회원 테이블로 부터 회원 ID 와 성명을 검색하시오.
SELECT MEM_ID
       ,MEM_NAME
FROM MEMBER;

--상품 테이블로 부터 상품 코드와 상품명을 검색 하시오
--단 상품코드가 P102000001인 데이터만
SELECT PROD_ID, PROD_NAME
FROM PROD;
WHERE PROD_ID = 'P102000007';

--회원 테이블의 마일리지를 12로 나눈 값을 검색하시요

SELECT MEM_MILEAGE / 12
     , MEM_MILEAGE + 12
     , MEM_MILEAGE - /12
     , MEM_MILEAGE * /12
FROM MEMBER;

--회원 테이블의 마일리지를 12로 나눈 값을 검색하시요

SELECT MEM_MILEAGE / 12 월평균 FROM MEMBER;  --가장 많이 씀
SELECT MEM_MILEAGE / 12 AS 월평균 FROM MEMBER; --그다음 많이 씀
SELECT MEM_MILEAGE / 12 AS "월평균" FROM MEMBER;
SELECT MEM_MILEAGE / 12 "월평균" FROM MEMBER;

--상품 테이블의 상품 코드(PROD_ID), 상품명(PROD_NAME), 판매금액을 검색 하시오?
--판매 금액은 = 판매단가(PROD_SALE) *55로 계산한다

SELECT PROD_ID, PROD_NAME,PROD_SALE *55
FROM PROD;

-- 상품테이블의 상품 분류를 중복되지 않게 검색
SELECT *
FROM LPROD;


SELECT PROD_LGU 상품분류
FROM PROD;

SELECT DISTINCT PROD_lGU 상품분류
FROM PROD;

--상품 테이블의 거래처 코드를 중복 되지 않게 검색하시오?
--ALIAS는 거래처

SELECT DISTINCT PROD_BUYER 거래처코드
FROM PROD;

-- Row를 Sort하고자 하면 ORDER BY 절을 사용
-- 역순으로 Sort는 Column명 뒤에 DESC
-- Column명 대신 Alias 또는 Select한  Column의 순서로 지정 가능
-- Default Sort순서는 Ascending

--ASCENDING : 오름차순 --> ASC   앞
--DECENDING : 내림차순 --> DESC  뒤

--회원 테이블에서 회원ID,회원명, 생일, 마일리지 검색
SELECT MEM_ID, MEM_NAME, MEM_MILEAGE
FROM MEMBER
ORDER BY MEN_ID ASC; --DEFAULT 오름차순 :ASC

SELECT MEM_ID 회원ID, 
       MEM_NAME 성명,
       MEM_BIR 생일,
       MEM_MILEAGE 마일리지
FROM MEMBER
ORDER BY 성명;
-- 회원의생일로 오름차순 정렬;

SELECT MEM_ID, MEM_NAME, MEM_MILEAGE, MEM_BIR
FROM MEMBER
ORDER BY 3;
--1차로 마일리지 오름 차순 후 정렬이 안되 값을 
--2차로 회원 아이디 오름 차순 정렬
SELECT MEM_ID, MEM_NAME, MEM_MILEAGE, MEM_BIR
FROM MEMBER
ORDER BY MEM_MILEAGE,1;
--상품 테이블 1차로 상품 분류로 오름차순 정렬한 후에 그대로 정렬이 안되면 
--2차로 회원 아이디 오름 차순 정렬
SELECT PROD_ID, 
       PROD_LGU,    
       PROD_BUYER
FROM PROD
ORDER BY PROD_BUYER ASC,2 DESC;

-- 상품 중 판매가가 170.000원만 상품 조회
SELECT *
FROM PROD
WHERE PROD_SALE = 170000;

-- 상품 중 판매가가 170.000원만 상품 조회
SELECT *
FROM PROD
WHERE PROD_SALE <> 170000;
ORDER BY  PROD_SALE ASC;


SELECT *
FROM PROD
WHERE PROD_SALE < 170000;
SELECT *
FROM PROD
WHERE PROD_SALE > 170000;

SELECT *
FROM PROD
WHERE PROD_SALE < 170000 OR PROD_SALE > 170000;

--회원중 76년도 1월 1일 이후에 태어난 회원을 검색 
--주민 번호 앞자리 비교
-- ALLIAS 는 회원 ID, 회워명, 주민등록 번호 앞자리

--식약처 mode
SELECT MEM_ID      회원ID 
      ,MEM_NAME    회원명
      ,MEM_REGNO1  주민등록번호
FROM MEMBER
WHERE MEM_REGNO1 > '760101'; --자료형이 문자형이여서 따움표를
                           --but 자동 변환으로인해 숫자로 변한이 된다
-- 상품 중 상품 분ㄹ가 P201이고, 판매가가 170.000원인 
--상품 조회
SELECT *
FROM PROD
WHERE PROD_LGU ='P201'
AND     PROD_SALE = 170000;

--상품 중 상품 분류가 P201 이상 
-- 판매가가 170.000원인 상품 조회

SELECT *
FROM PROD
WHERE PROD_LGU ='P201'
OR     PROD_SALE = 170000;

-- 알간모르간 드 모르간 
--상품 중 상품 분ㄹ가 P201도 
--아니고
--판매가가 170.00도 아닌 상품 조회
SELECT *
FROM PROD
WHERE 1 = 1    --  의미 없음 이라는 뜻 
--AND PROD_LGU != 'P201' AND PROD_SALE != 170000;
AND        NOT(PROD_LGU ='P201' OR PROD_SALE = 17000); -- <--드모르간 법칙

-- 상품 중 판매가가 300.000원이상 ,500,000원 
--이하인 ㅅㅇ품을 검색 하시오?
SELECT PROD_ID AS 상품코드
      ,PROD_NAME AS 상품명
      ,PROD_SALE AS 판매가
FROM PROD
WHERE 1 = 1 
AND PROD_SALE >= 300000 AND PROD_SALE <= 500000
;

--상품분류 테이블 에서 현제 상품 테이블에
--존재하ㅡㄴ 분류만 검색 (분류코드 LPROD_GUL),
--분류명)LPROD_NM)
--WHERE 절에 사용된 또다른 QUERY : NESTED 서브쿼리
SELECT LPROD_GU 분류코드
      ,LPROD_NM 분류명
FROM LPROD
WHERE 1 = 1
--AND LPROD_GU <'401'
AND LPROD_GU IN('P101','P102','P201','P202','P301','P302')
;
--문제
--거래처 테이블(BUYER)에서 현재 상품테이블(PROD)에
--존재하는 거래처(PROD_BUYER)만 검색
--ALIS : 거래처ID(BUYER_ID),거래처명(BUYER_NAME)

SELECT BUYER_ID 
      ,BUYER_NAME
FROM BUYER
WHERE 1 =1 
AND BUYER_ID IN (SELECT DISTINCT PROD_BUYER
                 FROM PROD
);

-- 상품 ㅈㅇ 판매가가 100000 부터 300000
--사이의 상품 조회
SELECT *
FROM PROD
WHERE PROD_SALE >= 100000
AND   PROD_SALE <= 300000
;
SELECT Mem_id
      ,mem_bir
      ,mem_name
FROM member
WHERE 1=1
-- mem_bir between to_date('1975.01.01',) and ('1976/12/31')
AND mem_bir between '1975/01/01' AND  '1976/12/31'

;

--상품중 매입가 가 300000~1500000이고
--판매가가 800.000 ~2000000인 상품
SELECT PROD_NAME,
       PROD_COST,
       PROD_SALE
FROM PROD
WHERE 1 = 1
AND (PROD_COST BETWEEN 300000 AND 1500000 AND PROD_SALE BETWEEN 800000 AND 2000000)
;

--WHERE 절 LIKE 연산자
  % 여러문자   _ 한문자

SELECT PROD_ID,
       PROD_NAMe
FROM  PROD
WHERE PROD_NAME LIKE '_성%'; --앞에 아무거나 1문자 2번째는 모조건 성

--WHERE '치 자로 끝나는 상품 정보를 검색하시오 
SELECT PROD_ID
      ,PROD_NAME
FROM PROD
WHERE 1=1
-- AND PROD_NAME NOT LIKE '%치'
--AND NOT(PROD_NAME LIKE '%치')
AND PROD_NAME LIKE '%치';
 +
SELECT PROD_ID
      ,PROD_NAME
FROM PROD
WHERE 1=1
AND PROD_NAME LIKE '%여름%';

SELECT PROD_ID
      ,PROD_NAME
FROM PROD
WHERE 1=1
AND BETWEEN PROD_NAME LIKE '%치%' AND PROD_NAME LIKE '%여름%'
;

INSERT INTO LPROD(LPROD_ID,lPROD_GU,LPROD_NM)
VALUES ( 10,'P501','홍길동%');

INSERT INTO LPROD(LPROD_ID,lPROD_GU,LPROD_NM)
VALUES ( 11,'P502','홍길동% 달성');
--DDL 중으 하나로써 TRANSACTIONㅢ종료(변화를 DB에 반영)
COMMIT;

SELECT * 
FROM LPROD;

SELECT LPROD_GU
      ,LPROD_NM
FROM LPROD
WHERE LPROD_NM LIKE '홍길동%';

SELECT LPROD_GU
    ,  LPROD_NM
FROM   LPROD
WHERE 1=1
--AND LPROD_NM = '홍길동%'
AND LPROD_NM LIKE '홍길동\%' ESCAPE '\'
;

-- % 와일드 카드라는 기능을 벗어나라


SELECT MEM_ID
      ,MEM_NAME
FROM   MEMBER
WHERE MEM_NAME LIKE '김%' 
;

--회원 테이블 주민 앞자리 검색 1975 생 제외

SELECT MEM_ID 
     , MEM_NAME
     , MEM_REGNO1
FROM MEMBER
WHERE 1=1
--AND MEM_REGNO1 NOT IN(MEM_REGNO1 '75%' FROM MEMBER)
AND MEM_REGNO1 NOT LIKE '75%'
ORDER BY 3;

-- 가격 100 미만 삼성 제품 내림차순 리스트
SELECT PROD_ID 
     , PROD_NAME
     , PROD_SALE
     , PROD_DETAIL
FROM PROD
WHERE 1=1
AND PROD_NAME LIKE '%삼성%' AND PROD_SALE < 1000000
ORDER BY 3 DESC;

-- 회원테이블의 회원 ID COLUMN의 ASCII 값으 검색하시어
SELECT 'A' || 'BCDE' FROM DUAL;

SELECT MEM_ID || 'NAME IS ' || MEM_NAME FROM MEMBER;


SELECT CONCAT('MY NAME IS',MEM_NAME) FROM MEMBER;

SELECT CHR (65) "CHR",ASCII('ABC') FROM DUAL;



SELECT LOWER('DATA MANIPULATION LANGUAGE')
    ,  UPPER('DATA MANIPULATION LANGUAGE')
    ,  INITCAP('DATA MANIPULATION LANGUAGE')
FROM DUAL;

SELECT LPAD('*',1,'*') FROM DUAL;
SELECT LPAD('*',2,'*') FROM DUAL;
SELECT LPAD('*',3,'*') FROM DUAL;
SELECT LPAD('*',4,'*') FROM DUAL;
SELECT LPAD('*',5,'*') FROM DUAL;

SELECT LPAD('JAVA',10,'*') "LPAD"
     , RPAD('FLEX',12,'*') "RPAD"
FROM SYS.DUAL;  -- DUAL 은 가상의테이블 
   --SYS 계정에서 소유를합니다


----------------------------------------20210125
SELECT PROD_PRICE 
      ,LPAD(PROD_PRICE, 10,'*')
FROM PROD;

--회원테이블 성씨 ㅈ조히
SELECT MEM_ID AS 회원 ID
      ,MEM_NAME
      ,SUBSTR(MEM_NAME,1,1) AS 성씨
      FROM MEMBER;
--상품 테이블 상품명 4번쨰에서 2글다
--'칼라' 인 상품의 상품 코드 (PROD_ID),
--상품며(PROD_NAME)을 검색 

SELECT PROD_ID 
    ,  PROD_NAME
  
FROM PROD
WHERE SUBSTR(PROD_NAME ,4,2) ='칼라';

SELECT PROD_ID 
    ,  PROD_NAME
  
FROM PROD
WHERE PROD_NAME LIKE '___칼라%';
--검색 속도는 LIKE가 빠르다


--장바구니 테이블 에서 장바구니 번호 중에 04월에해당하는

SELECT CART_NO
      ,CART_PROD
FROM CART
--WHERE SUBSTR(CART_NO,5,2) ='04';
WHERE CART_NO LIKE '____04%';

SELECT PROD_ID 상품코드
      ,SUBSTR(PROD_ID,1,4)대분류
      ,SUBSTR('P101000001',5,6) 순번1
      ,SUBSTR('P101000001',1,4) 순번1
      
FROM PROD;      
--회원 ID다름과 같이 출력 

SELECT MEM_ID AS 회언ID
      ,SUBSTR(MEM_ID,1,1) AS 앞1자
      ,SUBSTR(MEM_ID,-3) AS 나머지
FROM MEMBER;

---------------REPLACE----------
SELECT 
       MEM_NAME AS 회원명
      ,SUBSTR(MEM_NAME,1,3) AS 앞1자
      ,REPLACE(MEM_NAME,'이','리') AS "회원명 치환" 
FROM MEMBER;

SELECT INSTR('HELLO HEIDI', 'HE') AS REDULT1
      ,INSTR('HELLO HEIDI', 'DI') AS REDULT2
      ,INSTR('HELLO HEIDI', 'HE',3) AS REDULT2
      ,INSTR('HELLO HEIDI', 1,2) AS REDULT3
FROM DUAL;
--- I HAVE A AT 
SELECT INSTR('I HAVE A HAT','HA') AS RESULT1
    ,  INSTR('I HAVE A HAT','HA', 1,2) AS RESULT2 
FROM DUAL;

SELECT INSTR('I have a hat that i had have found that
            hat before 2 years ago.','ha',1,5) as ha의위치
from dual;
---------------------
SELECT 
       substr('mepch@test.com' ,1,instr('mepch@test.com' , '@')-1)   as 아이디
      ,substr('mepch@test.com' ,instr('mepch@test.com' , '@')+1)as 도메인  
FROM DUAL;

------------------------------------2021 01 26 화요일
SELECT BUYER_ID               AS 거래처코드
      , LENGTH(BUYER_ID)      AS 거래처코드길이
      , BUYER_NAME            AS 거래처명
      , LENGTH(BUYER_NAME)    AS 거래처명길이
      , LENGTHB(BUYER_NAME)   AS 거래처명BYTE수
FROM  BUYER;

SELECT ABS(-365) FROM DUAL;   -- 절대값
SELECT SIGN(12), SIGN(0), SIGN(-55) FROM DUAL; --음수 양수 비교가능 
SELECT POWER (3,2), POWER 2,10) FROM DUAL; --(N,Y)  N의 Y승
SELECT SQRT(2), SQRT(9) FROM DUAL; --N의제곱근

SELECT GREATEST(0,20,30) AS"큰값"
      ,LEAST('강아지',256,'송아지') AS "작은값" --256<강아지<송아지
FROM DUAL;

SELECT ROUND(345.123,1) FROM DUAL;
SELECT ROUND(345.123,2) FROM DUAL;
SELECT ROUND(345.123,3) FROM DUAL;
SELECT ROUND(345.123,-1) FROM DUAL;
SELECT ROUND(345.123,-2) FROM DUAL;
SELECT ROUND(345.123,-3) FROM DUAL;
SELECT ROUND(345.123) FROM DUAL;

SELECT ROUND(191.666666,2)FROM DUAL; -- 3번째 자리에서 반올림
SELECT TRUNC(191.666666,2)FROM DUAL; -- 2번쨰자리에서 칼같이 버림

--문제 
--상품테이블의 상품명, 원가율(매입가/판매가)을 비율로
--(반올림 없는것과 소수점 살리기 반올림 비교)
--비율는 비율에 100을 곱한값임
-- 소수점 첫번쟤 살리는 반올림
--ROUND 

SELECT ((PROD_COST/PROD_SALE)*100)  AS 원가율
      ,ROUND((PROD_COST/PROD_SALE)*100,1) AS 원가율1
      ,TRUNC((PROD_COST/PROD_SALE)*100,1) AS 원가율2     
FROM PROD;

--문제
--상품테이블의 평균판매가를 소수점2번쨰 자리 까지반올림
SELECT ROUND(AVG(PROD_SALE),2) AS 평균판매가
FROM PROD;

/*
MOD:나머지르 구하는함수 
10을 3을나누면 나머지는 1이다
*/
SELECT MOD(10,3) FROM DUAL;
--문제 
SELECT -3.141592         AS 원본
      ,FLOOR(-3.141592)  AS 내림
      ,CEIL(-3.141592)   AS 올림
FROM DUAL;

--SYSDATE : 현재 날짜 &시간 출력
SELECT SYSDATE FROM DUAL;

SELECT TO_CHAR (SYSDATE,'YYYY-MM-DD HH:MI:SS') AS "오늘시간"
      ,SYSDATE - 1 AS "어제 이시간"
      ,SYSDATE + 1 AS "내일 이시간"
      ,TO_CHAR(SYSDATE + 1/24,'YYYY-MM-DD HH:MI:SS') AS "1 시간 추가"
FROM DUAL;

SELECT
      MEM_NAME
     ,MEM_BIR
     ,MEM_BIR + 12000 "12000일째"
     ,TO_CHAR(TO_DATE('1993-11-09')+12000)  내생일
FROM MEMBER
;
/
SET SERVEROUTPUT ON;
/
DECLARE
    MY_BIR DATE := TO_DATE('1993-11-09');
    MY_TIME NUMBER := ROUND(SYSDATE - TO_DATE('1993-11-09'),2);
--    MY_LIFE NUMBER := ROUND(SYSDATE - TO_DATE('1993-11-09'),2) *3;
    MY_DATE VARCHAR2(100);
BEGIN
    SELECT TO_CHAR(TO_DATE('1993-11-09')) INTO MY_DATE
    FROM DUAL;
    
    DBMS_OUTPUT.PUT_LINE(MY_BIR || ', ' || MY_TIME || ',' || MY_DATE ','||MY_LIFE );
END;
/

SELECT 
        TO_CHAR(TO_DATE('1993-11-09')) AS BIR
    ,  ROUND( ABS(TO_DATE('1993-11-09') - SYSDATE),2) AS TIME
    , (ROUND( ABS(TO_DATE('1993-11-09') - SYSDATE),2)*9000) AS LIFE 
    FROM DUAL;
    
    
   --------------
   --이번달이몇일ㅇ남았는지
   --오늘 마지막날짜  이번달남은 날짜 
   
SELECT SYSDATE AS 오늘날짜
      ,LAST_DAY(SYSDATE) AS 이번달마지막날짜
      ,LAST_DAY(SYSDATE) - SYSDATE  AS 이달남은날짜
FROM DUAL;

select extract(year from sysdate)
      ,extract(MONTH from sysdate)
      ,extract(DAY from sysdate)
      ,extract(HOUR from sysTIMESTAMP)+9 --< --날짜변경선 기준 시간
      ,extract(MINUTE from sysTIMESTAMP)
      ,extract(SECOND from sysTIMESTAMP)
FROM DUAL;      
      
CREATE TABLE TEMP(
     TEMP_ID VARCHAR2(10),
     REGISTER_ID VARCHAR2(50),
     REGIST_TS TIMESTAMP,
     UPDATER_ID VARCHAR2(50),
     UPDATE_TS TIMESTAMP,
     CONSTRAINT PK_TEMP PRIMARY KEY(TEMP_10)
);
INSERT INTO TEMP(TEMP_ID,REGISTER_ID, REGIST_TS,UPDATER_ID, UPDATE_TS)
VALUES('P101','ADMIN',SYSTIMESTAMP,'ADMIN',SYSTIMESTAMP);
--트랜젟ㄴ 종료 및 변경내역 반영
COMMIT;
SELECT * FROM TEMP;

--생일이 3월인 회원 
SELECT MEM_ID
      ,MEM_NAME
      ,MEM_BIR
FROM MEMBER
WHERE EXTRACT (MONTH FROM MEM_BIR) = 3;
 --WHERE MEM_BIR LIKE '%/03/&';
 
 --스키마(SCHEMA):구조
 --테이블 스키마 : 컬럼, 자료형, 크기,제약사항
 SELECT '[' || 'Hello' || ']' "형변환" 
     , '[' || CAST('Hello' AS CHAR(30)) || ']' "형변환" 
     , '[' || CAST('Hello' AS VARCHAR2(30)) || ']' "형변환" 
FROM   DUAL;

SELECT '2018/03/29' + 10
FROM   DUAL;

SELECT CAST('2018/03/29' AS DATE) + 10
FROM   DUAL;

SELECT CAST('1997/12/25' AS DATE) 
FROM   DUAL;

--***
SELECT '2017/01/23' + 1
FROM   DUAL;



SELECT TO_CHAR(CAST('2008-12-25' AS DATE),'YYYY.MM.DD HH24:MI')
FROM DUAL;

SELECT PROD_NAME
      ,PROD_SALE
      ,TO_CHAR(PROD_INSDATE,'YY/MM/DD')
FROM PROD;

--------------------------------20210128 수업 시작
SELECT MEM_NAME ||'님은'
      ,TO_CHAR(MEM_BIR, 'YYYY"년" MON"출생이도 태어난 요일은 "DAY')
      ,TO_CHAR(MEM_BIR, 'YYYY-MM-DD HH:MI:SS')
      
FROM MEMER;

SELECT PROD_ID
      ,PROD_NAME
      ,'대분류코드는' || SUBSTR(PROD_ID,1,4)|| '이고, 순번은'
      ,SUBSTR(PROD_ID,5)  || '이다.'
FROM PROD;

SELECT  BUY_PROD || ' 상품은' AS 상품
    ,  TO_CHAR(BUY_DATE, 'YYYY"년" MM"월" DD"일에"') AS 날짜
    ,  BUY_QTY || '개가 입고 됨' AS 갯수
FROM BUYPROD;

SELECT TO_CHAR(1234.6, '99,999.00')
FROM DUAL;
SELECT TO_CHAR(-1234.6, 'L9999.00PR')
FROM DUAL;
SELECT TO_CHAR(255,'XXX')
FROM DUAL;

SELECT TO_CHAR(PROD_SALE , 'L999,999,999') AS 안녕
FROM PROD;

SELECT 
       PROD_ID
      ,PROD_NAME
      ,TO_CHAR(PROD_COST, 'L9,999,999')  AS 매입
      ,TO_CHAR(PROD_PRICE, 'L999,999,999,999') AS 소비자
      ,TO_CHAR(PROD_SALE, 'L999,999,999,999')  AS 판매
FROM PROD;


SELECT 3.1415 FROM DUAL;



--회원테이블에서 이쁜이 회원 (MEM_NAME=이쁜이)의
--회원 ID 2~4문자열을 숫자형을 치환후 
--10을 더하여 새로운 회원 ID로 조합 하시오

SELECT MEM_ID    AS 회원
     ,SUBSTR(MEM_ID,1,2) || ((SUBSTR(MEM_ID ,2))+10) AS 조합회원  
FROM MEMBER
WHERE MEM_NAME IN '이쁜이';

SELECT TO_DATE('2017-01-24','YYYY-MM-DD HH:MI:SS')
FROM DUAL;

SELECT TO_CHAR(to_date('200803101234','YYYYMMDDHHMI')+3,'YYYY-MM-DD HH:MI')
FROM DUAL;

--204
--회원테이블 주민번호1 
--날짜로 치환 후 검색 
SELECT TO_DATE(MEM_REGNO1,'YYMMDD') AS 생년월일
      ,TO_CHAR(TO_DATE(MEM_REGNO1,'YYMMDD'), 'YYYY"년 "MM"월 "DD"일"') AS 생년월일
      ,TO_CHAR(TO_DATE(MEM_REGNO1,'YYMMDD'), '"19"YY"년 "MM"월 "DD"일"')
FROM MEMBER;

--장바구니 에서 장바구니 번호
--날짜 치환 
--205년 월14일 로 출력 
SELECT CART_NO      장바구니번호
    ,  CART_PROD    상품코드
    ,  TO_CHAR(TO_DATE(SUBSTR(CART_NO,1,8), 'YYYYMMDD'),'YYYY"년"MM"월"DD"일"')   판매일
    ,  CART_QTY     판매수량
FROM CART;
